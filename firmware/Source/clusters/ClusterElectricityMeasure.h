#ifndef __CLUSTER_ELECTRICITY_MEASURE__H__
#define __CLUSTER_ELECTRICITY_MEASURE__H__

#include "ClusterElectricityMeasure_constant.h"
#include <hal_types.h>
#include "zclReadAttributeFn.h"


extern uint32 measurementType;
extern uint16 frequency;
extern int32 totalActivePower;
extern int32 totalReactivePower;
extern uint32 totalApparentPower;
extern uint16 frequencyMult;
extern uint16 frequencyDiv;
extern uint32 powerMult;
extern uint32 powerDivisor;
extern uint16 lineCurrent;
extern int16 activeCurrent;
extern int16 reactiveCurrent;
extern uint16 RMSVolt;
extern uint16 RMSVoltMin;
extern uint16 RMSVoltMax;
extern uint16 RMSCurrent;
extern uint16 RMSCurrentMinx;
extern uint16 RMSCurrentMax;
extern int16 ActivePower;
extern int16 ActivePowerMinx;
extern int16 ActivePowerMax;
extern int16 ReactivePower;
extern uint16 ApparentPower;
extern int8 PowerFactor;
extern uint16 averageRmsVolrPeriod;
extern uint16 acVoltMult;
extern uint16 acVoltDiv;
extern uint16 acCurrentMult;
extern uint16 acCurrentDiv;
extern uint16 acPowerMult;
extern uint16 acPowerDiv;

#define ELECTRICITY_MEASURE_ATTRIBUTES  \
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_MEASUREMENT_TYPE,  ZCL_DATATYPE_BITMAP32, ACCESS_CONTROL_READ, (void *)&measurementType, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_FREQ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&frequency, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_TOTAL_ACTIVE_POWER,  ZCL_DATATYPE_INT32, ACCESS_CONTROL_READ, (void *)&totalActivePower, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_TOTAL_REACTIVE_POWER,  ZCL_DATATYPE_INT32, ACCESS_CONTROL_READ, (void *)&totalReactivePower, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_TOTAL_APPARENT_POWER,  ZCL_DATATYPE_UINT32, ACCESS_CONTROL_READ, (void *)&totalApparentPower, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_FREQ_MULT,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&frequencyMult, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_FREQ_DIV,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&frequencyDiv, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_POWER_MULT,  ZCL_DATATYPE_UINT32, ACCESS_CONTROL_READ, (void *)&powerMult, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_POWER_DIV,  ZCL_DATATYPE_UINT32, ACCESS_CONTROL_READ, (void *)&powerDivisor, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_LINE_CURRENT    ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&lineCurrent, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_ACTIVE_CURRENT  ,  ZCL_DATATYPE_INT16, ACCESS_CONTROL_READ, (void *)&activeCurrent, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_REACTIVE_CURRENT,  ZCL_DATATYPE_INT16, ACCESS_CONTROL_READ, (void *)&reactiveCurrent, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_RMS_VOLT        ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&RMSVolt, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_RMS_VOLT_MIN    ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&RMSVoltMin, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_RMS_VOLT_MAX    ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&RMSVoltMax, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_RMS_CURRENT     ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&RMSCurrent, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_RMS_CURRENT_MIN ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&RMSCurrentMinx, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_RMS_CURRENT_MAX ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&RMSCurrentMax, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_ACTIVE_POWER    ,  ZCL_DATATYPE_INT16, ACCESS_CONTROL_READ, (void *)&ActivePower, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_ACTIVE_POWER_MIN,  ZCL_DATATYPE_INT16, ACCESS_CONTROL_READ, (void *)&ActivePowerMinx, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_ACTIVE_POWER_MAX,  ZCL_DATATYPE_INT16, ACCESS_CONTROL_READ, (void *)&ActivePowerMax, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_REACTIVE_POWER  ,  ZCL_DATATYPE_INT16, ACCESS_CONTROL_READ, (void *)&ReactivePower, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_APPARENT_POWER  ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&ApparentPower, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_POWER_FACTOR    ,  ZCL_DATATYPE_INT8, ACCESS_CONTROL_READ, (void *)&PowerFactor, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AV_RMS_VOLT_PERIOD,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&averageRmsVolrPeriod, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_VOLT_MULT    ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&acVoltMult, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_VOLT_DIV     ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&acVoltDiv, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_CURRENT_MULT ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&acCurrentMult, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_CURRENT_DIV  ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&acCurrentDiv, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_POWER_MULT   ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&acPowerMult, NULL  }  },\
	{ ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT, {  ATTRID_ELECTRICITY_MEASURE_AC_POWER_DIV    ,  ZCL_DATATYPE_UINT16, ACCESS_CONTROL_READ, (void *)&acPowerDiv, NULL  }  },
	
void electricityMeasureClusterReadAttribute(zclAttrRec_t *);

		

#endif
