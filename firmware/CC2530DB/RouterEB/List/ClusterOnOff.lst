###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.30.1.41636 for 8051             15/Oct/2015  21:15:46 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\Source\clusters\ClusterOnOff.c                  #
#    Command line       =  -f C:\Users\paolo\Documents\GitHub\zpowermeter\fir #
#                          mware\CC2530DB\..\Tools\f8wRouter.cfg (-DCPU32MHZ  #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Tools\f8wConfig.cfg (-DZIGBEEPRO    #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=5000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100    #
#                          -DREJOIN_POLL_RATE=440) -f                         #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Tools\f8wZCL.cfg                    #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\Source\clusters\ClusterOnOff.c -D SECURE=0 -D   #
#                          OSC32K_CRYSTAL_INSTALLED=FALSE -D HAL_KEY=FALSE    #
#                          -D HAL_BOARD_CC2530EB_REV17 -D TC_LINKKEY_JOIN -D  #
#                          NV_INIT -D xNV_RESTORE -D MULTICAST_ENABLED=FALSE  #
#                          -D ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D          #
#                          FEATURE_SYSTEM_STATS -lC                           #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\List\ -lA                     #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\List\ --diag_suppress         #
#                          Pe001,Pa010 -o C:\Users\paolo\Documents\GitHub\zpo #
#                          wermeter\firmware\CC2530DB\RouterEB\Obj\ -e        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\paolo\Documents\GitHub\zpowermeter\fir #
#                          mware\CC2530DB\ -I C:\Users\paolo\Documents\GitHub #
#                          \zpowermeter\firmware\CC2530DB\..\Source\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Source\ha\ -I                       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Source\zmain\ -I                    #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\hal\include\ -I          #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\hal\target\CC2530EB\ -I  #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\include\ -I          #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\high_level\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\low_level\srf04\ -I  #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\low_level\srf04\sing #
#                          le_chip\ -I C:\Users\paolo\Documents\GitHub\zpower #
#                          meter\firmware\CC2530DB\..\Components\mt\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\osal\include\ -I         #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\services\saddr\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\services\sdata\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\af\ -I             #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\nwk\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\sapi\ -I           #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\sec\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\sys\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\zcl\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\zdo\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\zmac\ -I                 #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\zmac\f8w\ -Ohz           #
#                          --require_prototypes                               #
#    List file          =  C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\List\ClusterOnOff.lst         #
#    Object file        =  C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\Obj\ClusterOnOff.r51          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\paolo\Documents\GitHub\zpowermeter\firmware\Source\clusters\ClusterOnOff.c
      1          	/**************************************************************************************************
      2            Filename:       ClusterOnOff.c
      3          
      4            Autorh:  Paolo Achdjia
      5            Created: 27/10/2014
      6          
      7          **************************************************************************************************/
      8          
      9          #include "zcl_general.h"
     10          
     11          #include "ClusterOnOff.h"
     12          #include "onboard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1
     13          
     14          __sfr __no_init volatile struct  {
     15          	unsigned char DIR0_7: 1;
     16          	unsigned char DIR0_6: 1;
     17          	unsigned char DIR0_5: 1;
     18          	unsigned char DIR0_4: 1;
     19          	unsigned char DIR0_3: 1;
     20          	unsigned char DIR0_2: 1;
     21          	unsigned char DIR0_1: 1;
     22          	unsigned char DIR0_0: 1;

   \                                 In  segment SFR_AN, at 0xfd
     23          } @ 0xFD;
   \                     _A_DIR0_7:
   \   000000                DS 1
     24          
     25          __sfr __no_init volatile struct  {
     26          	unsigned char P0SEL_7: 1;
     27          	unsigned char P0SEL_6: 1;
     28          	unsigned char P0SEL_5: 1;
     29          	unsigned char P0SEL_4: 1;
     30          	unsigned char P0SEL_3: 1;
     31          	unsigned char P0SEL_2: 1;
     32          	unsigned char P0SEL_1: 1;
     33          	unsigned char P0SEL_0: 1;

   \                                 In  segment SFR_AN, at 0xf3
     34          } @ 0xF3;
   \                     _A_P0SEL_7:
   \   000000                DS 1
     35          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     36          uint8  onOffValue = LIGHT_ON;
   \                     onOffValue:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for onOffValue>`
   \   000001                REQUIRE __INIT_XDATA_I
     37          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     38          void onOffInit(void) {
   \                     onOffInit:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     39          	DIR0_0=1;
   \   000000   43FD80       ORL     0xfd,#0x80
     40          	P0SEL_0=0;
   \   000003   53F37F       ANL     0xf3,#0x7f
     41          	P0_0=0;
   \   000006   C280         CLR     0x80.0
     42          }
   \   000008   02....       LJMP    ?BRET
   \   00000B                REQUIRE _A_DIR0_7
   \   00000B                REQUIRE _A_P0SEL_7
   \   00000B                REQUIRE _A_P0
     43          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     44          void setIOStatus(void){
   \                     setIOStatus:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     45          	if ( onOffValue  == LIGHT_ON )
   \   000004   90....       MOV     DPTR,#onOffValue
   \   000007   E0           MOVX    A,@DPTR
   \   000008   6401         XRL     A,#0x1
   \   00000A   7004         JNZ     ??setIOStatus_0
     46          	  P0_0=1;
   \   00000C   D280         SETB    0x80.0
   \   00000E   8002         SJMP    ??setIOStatus_1
     47            	else
     48          	  P0_0=0;
   \                     ??setIOStatus_0:
   \   000010   C280         CLR     0x80.0
     49          }
   \                     ??setIOStatus_1:
   \   000012                REQUIRE ?Subroutine0
   \   000012                REQUIRE _A_P0
   \   000012                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     50          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     51          void setLightStatus(uint8 status){
   \                     setLightStatus:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     52          	onOffValue = status;
   \   000006   90....       MOV     DPTR,#onOffValue
   \   000009   F0           MOVX    @DPTR,A
     53          	setIOStatus();
   \   00000A                ; Setup parameters for call to function setIOStatus
   \   00000A   12....       LCALL   ??setIOStatus?relay  ; Banked call to: setIOStatus
     54          }
   \   00000D   7F01         MOV     R7,#0x1
   \   00000F   02....       LJMP    ?BANKED_LEAVE_XDATA
     55          
     56          
     57          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     58          ZStatus_t processOnOffClusterServerCommands(zclIncoming_t *pInMsg) {
   \                     processOnOffClusterServerCommands:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     59          	switch(pInMsg->hdr.commandID){
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   6019         JZ      ??processOnOffClusterServerCommands_0
   \   000012   14           DEC     A
   \   000013   6009         JZ      ??processOnOffClusterServerCommands_1
   \   000015   14           DEC     A
   \   000016   7019         JNZ     ??processOnOffClusterServerCommands_2
     60          	case COMMAND_ON:
     61          		onOffValue = LIGHT_ON;
     62          		break;
     63          	case COMMAND_OFF:
     64          		onOffValue = LIGHT_OFF;
     65          		break;
     66          	case COMMAND_TOGGLE:
     67          		if ( onOffValue == LIGHT_OFF )
   \   000018   90....       MOV     DPTR,#onOffValue
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   700D         JNZ     ??processOnOffClusterServerCommands_0
     68                		onOffValue = LIGHT_ON;
   \                     ??processOnOffClusterServerCommands_1:
   \   00001E   90....       MOV     DPTR,#onOffValue
   \   000021   7401         MOV     A,#0x1
   \                     ??processOnOffClusterServerCommands_3:
   \   000023   F0           MOVX    @DPTR,A
     69              	else
     70                		onOffValue = LIGHT_OFF;
     71          		break;
     72          	default:
     73          		return ZFailure;
     74          	}
     75          	setIOStatus();
   \   000024                ; Setup parameters for call to function setIOStatus
   \   000024   12....       LCALL   ??setIOStatus?relay  ; Banked call to: setIOStatus
     76          	return ZSuccess;
   \   000027   7900         MOV     R1,#0x0
   \                     ??processOnOffClusterServerCommands_4:
   \   000029   80..         SJMP    ?Subroutine0
   \                     ??processOnOffClusterServerCommands_0:
   \   00002B   90....       MOV     DPTR,#onOffValue
   \   00002E   E4           CLR     A
   \   00002F   80F2         SJMP    ??processOnOffClusterServerCommands_3
   \                     ??processOnOffClusterServerCommands_2:
   \   000031   7901         MOV     R1,#0x1
   \   000033   80F4         SJMP    ??processOnOffClusterServerCommands_4
     77          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for onOffValue>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??onOffInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    onOffInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??setIOStatus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    setIOStatus

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??setLightStatus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    setLightStatus

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??processOnOffClusterServerCommands?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    processOnOffClusterServerCommands

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0      0   onOffInit
      2      0   processOnOffClusterServerCommands
        2      0   -> setIOStatus
      2      9   setIOStatus
      0      9   setLightStatus
        0      9   -> setIOStatus


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for onOffValue>
       6  ??onOffInit?relay
       6  ??processOnOffClusterServerCommands?relay
       6  ??setIOStatus?relay
       6  ??setLightStatus?relay
       7  ?Subroutine0
       1  _A_DIR0_7
       1  _A_P0
       1  _A_P0SEL_7
      11  onOffInit
       1  onOffValue
      53  processOnOffClusterServerCommands
      18  setIOStatus
      18  setLightStatus

 
 107 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
 
 132 bytes of CODE  memory
   0 bytes of DATA  memory (+ 3 bytes shared)
   1 byte  of XDATA memory

Errors: none
Warnings: none
