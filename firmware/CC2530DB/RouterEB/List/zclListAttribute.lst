###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.30.1.41636 for 8051             27/Oct/2015  21:12:34 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\Components\stack\zcl\zclListAttribute.cpp       #
#    Command line       =  -f C:\Users\paolo\Documents\GitHub\zpowermeter\fir #
#                          mware\CC2530DB\..\Tools\f8wRouter.cfg (-DCPU32MHZ  #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Tools\f8wConfig.cfg (-DZIGBEEPRO    #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=5000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100    #
#                          -DREJOIN_POLL_RATE=440) -f                         #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Tools\f8wZCL.cfg                    #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\Components\stack\zcl\zclListAttribute.cpp -D    #
#                          SECURE=0 -D OSC32K_CRYSTAL_INSTALLED=FALSE -D      #
#                          HAL_KEY=FALSE -D HAL_BOARD_CC2530EB_REV17 -D       #
#                          TC_LINKKEY_JOIN -D NV_INIT -D xNV_RESTORE -D       #
#                          MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_WRITE   #
#                          -D ZCL_REPORT -D FEATURE_SYSTEM_STATS -lC          #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\List\ -lA                     #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\List\ --diag_suppress         #
#                          Pe001,Pa010 -o C:\Users\paolo\Documents\GitHub\zpo #
#                          wermeter\firmware\CC2530DB\RouterEB\Obj\ -e        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\paolo\Documents\GitHub\zpowermeter\fir #
#                          mware\CC2530DB\ -I C:\Users\paolo\Documents\GitHub #
#                          \zpowermeter\firmware\CC2530DB\..\Source\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Source\ha\ -I                       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Source\zmain\ -I                    #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\hal\include\ -I          #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\hal\target\CC2530EB\ -I  #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\include\ -I          #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\high_level\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\low_level\srf04\ -I  #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\mac\low_level\srf04\sing #
#                          le_chip\ -I C:\Users\paolo\Documents\GitHub\zpower #
#                          meter\firmware\CC2530DB\..\Components\mt\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\osal\include\ -I         #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\services\saddr\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\services\sdata\ -I       #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\af\ -I             #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\nwk\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\sapi\ -I           #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\sec\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\sys\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\zcl\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\stack\zdo\ -I            #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\zmac\ -I                 #
#                          C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\..\Components\zmac\f8w\ -Ohz --eec++   #
#    List file          =  C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\List\zclListAttribute.lst     #
#    Object file        =  C:\Users\paolo\Documents\GitHub\zpowermeter\firmwa #
#                          re\CC2530DB\RouterEB\Obj\zclListAttribute.r51      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\paolo\Documents\GitHub\zpowermeter\firmware\Components\stack\zcl\zclListAttribute.cpp
      1          /**************************************************************************************************
      2          
      3           DESCRIPTION:
      4            --
      5          
      6           CREATED: 23/10/2015, by Paolo Achdjian
      7          
      8           FILE: zclListAttribute.c
      9          
     10          ***************************************************************************************************/
     11          
     12          
     13          #include "zclListAttribute.h"
     14          #include "hal_types.h"
     15          #include "OSAL_Memory.h"
     16          
     17          #ifdef __cplusplus
     18          extern "C"
     19          {
     20          #endif
     21          	

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     22          static struct zclAttrRecsList *attrList = (struct zclAttrRecsList *)NULL;
   \                     attrList:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     23          
     24          static struct zclAttrRecsList *zclFindAttrRecsList( uint8 endpoint );
     25          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     26          uint8_t zclFindAttrRec( uint8_t endpoint, uint16_t clusterID, uint16_t attrId, struct zclAttrRec_t *pAttr ){
   \                     zclFindAttrRec:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
     27          	struct zclAttrRecsList * endpointList = zclFindAttrRecsList(endpoint);
   \   000007   90....       MOV     DPTR,#attrList
   \                     ??zclFindAttrRec_0:
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   E8           MOV     A,R0
   \   000010   49           ORL     A,R1
   \   000011   7003         JNZ     $+5
   \   000013   02....       LJMP    ??zclFindAttrRec_1 & 0xFFFF
   \   000016   8882         MOV     DPL,R0
   \   000018   8983         MOV     DPH,R1
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   6E           XRL     A,R6
   \   00001E   8882         MOV     DPL,R0
   \   000020   8983         MOV     DPH,R1
   \   000022   70E6         JNZ     ??zclFindAttrRec_0
     28          	if(endpointList == NULL){
     29          		return 0;
     30          	}
     31          	const struct  zclAttrRec_t __code  *iter = endpointList->attrs;
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   A3           INC     DPTR
   \   000027   E0           MOVX    A,@DPTR
   \   000028   F8           MOV     R0,A
   \   000029   A3           INC     DPTR
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   F9           MOV     R1,A
   \   00002C   8007         SJMP    ??zclFindAttrRec_2
     32          	for(; iter->clusterID != 0 || iter->attr.attrId !=0; iter++){
   \                     ??zclFindAttrRec_3:
   \   00002E   E8           MOV     A,R0
   \   00002F   240A         ADD     A,#0xa
   \   000031   F8           MOV     R0,A
   \   000032   5001         JNC     ??zclFindAttrRec_2
   \   000034   09           INC     R1
   \                     ??zclFindAttrRec_2:
   \   000035   8882         MOV     DPL,R0
   \   000037   8983         MOV     DPH,R1
   \   000039   E4           CLR     A
   \   00003A   93           MOVC    A,@A+DPTR
   \   00003B   C0E0         PUSH    A
   \   00003D   7401         MOV     A,#0x1
   \   00003F   93           MOVC    A,@A+DPTR
   \   000040   F583         MOV     DPH,A
   \   000042   D082         POP     DPL
   \   000044   8582..       MOV     ?V2,DPL
   \   000047   8583..       MOV     ?V3,DPH
   \   00004A   E5..         MOV     A,?V2
   \   00004C   45..         ORL     A,?V3
   \   00004E   7009         JNZ     ??zclFindAttrRec_4
   \   000050   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000053   E5..         MOV     A,?V0
   \   000055   45..         ORL     A,?V1
   \   000057   607C         JZ      ??zclFindAttrRec_1
     33          		if (iter->clusterID == clusterID && iter->attr.attrId==attrId){
   \                     ??zclFindAttrRec_4:
   \   000059   EA           MOV     A,R2
   \   00005A   65..         XRL     A,?V2
   \   00005C   7003         JNZ     ??zclFindAttrRec_5
   \   00005E   EB           MOV     A,R3
   \   00005F   65..         XRL     A,?V3
   \                     ??zclFindAttrRec_5:
   \   000061   70CB         JNZ     ??zclFindAttrRec_3
   \   000063   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000066   EC           MOV     A,R4
   \   000067   65..         XRL     A,?V0
   \   000069   7003         JNZ     ??zclFindAttrRec_6
   \   00006B   ED           MOV     A,R5
   \   00006C   65..         XRL     A,?V1
   \                     ??zclFindAttrRec_6:
   \   00006E   70BE         JNZ     ??zclFindAttrRec_3
   \   000070   740C         MOV     A,#0xc
   \   000072   12....       LCALL   ?XSTACK_DISP0_8
   \   000075   E0           MOVX    A,@DPTR
   \   000076   F5..         MOV     ?V0,A
   \   000078   A3           INC     DPTR
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   F5..         MOV     ?V1,A
     34          			pAttr->clusterID = clusterID;
   \   00007C   85..82       MOV     DPL,?V0
   \   00007F   F583         MOV     DPH,A
   \   000081   12....       LCALL   ?Subroutine2 & 0xFFFF
     35          			pAttr->attr.accessControl = iter->attr.accessControl;
   \                     ??CrossCallReturnLabel_2:
   \   000084   A3           INC     DPTR
   \   000085   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000088   A3           INC     DPTR
   \   000089   F0           MOVX    @DPTR,A
     36          			pAttr->attr.attrId = attrId;
   \   00008A   85..82       MOV     DPL,?V0
   \   00008D   85..83       MOV     DPH,?V1
   \   000090   A3           INC     DPTR
   \   000091   A3           INC     DPTR
   \   000092   EC           MOV     A,R4
   \   000093   F0           MOVX    @DPTR,A
   \   000094   A3           INC     DPTR
   \   000095   ED           MOV     A,R5
   \   000096   12....       LCALL   ?Subroutine4 & 0xFFFF
     37          			pAttr->attr.dataPtr = iter->attr.dataPtr;
   \                     ??CrossCallReturnLabel_6:
   \   000099   E4           CLR     A
   \   00009A   93           MOVC    A,@A+DPTR
   \   00009B   FA           MOV     R2,A
   \   00009C   7401         MOV     A,#0x1
   \   00009E   93           MOVC    A,@A+DPTR
   \   00009F   FB           MOV     R3,A
   \   0000A0   85..82       MOV     DPL,?V0
   \   0000A3   85..83       MOV     DPH,?V1
   \   0000A6   A3           INC     DPTR
   \   0000A7   A3           INC     DPTR
   \   0000A8   A3           INC     DPTR
   \   0000A9   A3           INC     DPTR
   \   0000AA   A3           INC     DPTR
   \   0000AB   A3           INC     DPTR
   \   0000AC   12....       LCALL   ?Subroutine2 & 0xFFFF
     38          			pAttr->attr.dataType = iter->attr.dataType;
   \                     ??CrossCallReturnLabel_3:
   \   0000AF   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   0000B2   12....       LCALL   ?Subroutine4 & 0xFFFF
     39          			pAttr->attr.writeCB = iter->attr.writeCB;
   \                     ??CrossCallReturnLabel_7:
   \   0000B5   A3           INC     DPTR
   \   0000B6   A3           INC     DPTR
   \   0000B7   E4           CLR     A
   \   0000B8   93           MOVC    A,@A+DPTR
   \   0000B9   F8           MOV     R0,A
   \   0000BA   7401         MOV     A,#0x1
   \   0000BC   93           MOVC    A,@A+DPTR
   \   0000BD   F9           MOV     R1,A
   \   0000BE   85..82       MOV     DPL,?V0
   \   0000C1   85..83       MOV     DPH,?V1
   \   0000C4   A3           INC     DPTR
   \   0000C5   A3           INC     DPTR
   \   0000C6   A3           INC     DPTR
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   A3           INC     DPTR
   \   0000CA   A3           INC     DPTR
   \   0000CB   A3           INC     DPTR
   \   0000CC   E8           MOV     A,R0
   \   0000CD   F0           MOVX    @DPTR,A
   \   0000CE   A3           INC     DPTR
   \   0000CF   E9           MOV     A,R1
   \   0000D0   F0           MOVX    @DPTR,A
     40          			return 1;
   \   0000D1   7901         MOV     R1,#0x1
   \   0000D3   8002         SJMP    ??zclFindAttrRec_7
     41          		}
     42          	}
     43          	return 0;
   \                     ??zclFindAttrRec_1:
   \   0000D5   7900         MOV     R1,#0x0
   \                     ??zclFindAttrRec_7:
   \   0000D7                REQUIRE ?Subroutine0
   \   0000D7                ; // Fall through to label ?Subroutine0
     44          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   E4           CLR     A
   \   000007   93           MOVC    A,@A+DPTR
   \   000008   F5..         MOV     ?V0,A
   \   00000A   7401         MOV     A,#0x1
   \   00000C   93           MOVC    A,@A+DPTR
   \   00000D   F5..         MOV     ?V1,A
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   E4           CLR     A
   \   000001   93           MOVC    A,@A+DPTR
   \   000002   85..82       MOV     DPL,?V0
   \   000005   85..83       MOV     DPH,?V1
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   EA           MOV     A,R2
   \   000001   F0           MOVX    @DPTR,A
   \   000002   A3           INC     DPTR
   \   000003   EB           MOV     A,R3
   \   000004   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   22           RET
     45          
     46          static struct zclAttrRecsList *zclFindAttrRecsList( uint8 endpoint ){
     47          	struct zclAttrRecsList *pLoop = attrList;
     48          
     49          	while ( pLoop != NULL ){
     50          		if ( pLoop->endpoint == endpoint ) {
     51          			return  pLoop ;
     52              	}
     53          
     54              	pLoop = pLoop->next;
     55            	}
     56          
     57          	return ( NULL );
     58          }
     59          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     60          extern void zcl_registerAttrList(unsigned char endpoint, CONST struct zclAttrRec_t newAttrList[]){
   \                     zcl_registerAttrList:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0,R1
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009   EB           MOV     A,R3
   \   00000A   FF           MOV     R7,A
     61          	struct zclAttrRecsList * newItem = (struct  zclAttrRecsList*)osal_mem_alloc( sizeof( struct  zclAttrRecsList ) );
   \   00000B                ; Setup parameters for call to function osal_mem_alloc
   \   00000B   7A05         MOV     R2,#0x5
   \   00000D   7B00         MOV     R3,#0x0
   \   00000F   12....       LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
   \   000012   8A..         MOV     ?V2,R2
   \   000014   8B..         MOV     ?V3,R3
   \   000016   A8..         MOV     R0,?V2
   \   000018   A9..         MOV     R1,?V3
     62          	if ( attrList != NULL )  {
   \   00001A   90....       MOV     DPTR,#attrList
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   FA           MOV     R2,A
   \   00001F   A3           INC     DPTR
   \   000020   E0           MOVX    A,@DPTR
   \   000021   FB           MOV     R3,A
   \   000022   EA           MOV     A,R2
   \   000023   4B           ORL     A,R3
   \   000024   601F         JZ      ??zcl_registerAttrList_0
     63          		attrList->next = newItem;
   \   000026   E0           MOVX    A,@DPTR
   \   000027   F583         MOV     DPH,A
   \   000029   8A82         MOV     DPL,R2
   \   00002B   E8           MOV     A,R0
   \   00002C   F0           MOVX    @DPTR,A
   \   00002D   A3           INC     DPTR
   \   00002E   E9           MOV     A,R1
   \   00002F   12....       LCALL   ?Subroutine1 & 0xFFFF
     64            		attrList->endpoint = endpoint;
   \                     ??CrossCallReturnLabel_0:
   \   000032   E5..         MOV     A,?V0
   \   000034   12....       LCALL   ?Subroutine1 & 0xFFFF
     65          		attrList->attrs = newAttrList;
   \                     ??CrossCallReturnLabel_1:
   \   000037   A3           INC     DPTR
   \   000038   EE           MOV     A,R6
   \   000039   F0           MOVX    @DPTR,A
   \   00003A   A3           INC     DPTR
   \   00003B   EF           MOV     A,R7
   \   00003C   F0           MOVX    @DPTR,A
     66          		attrList = newItem;
   \   00003D   90....       MOV     DPTR,#attrList
   \   000040   E8           MOV     A,R0
   \   000041   F0           MOVX    @DPTR,A
   \   000042   A3           INC     DPTR
   \   000043   E9           MOV     A,R1
   \   000044   F0           MOVX    @DPTR,A
     67           	}
     68          }
   \                     ??zcl_registerAttrList_0:
   \   000045   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   90....       MOV     DPTR,#attrList
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FA           MOV     R2,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclFindAttrRec?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclFindAttrRec

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zcl_registerAttrList?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zcl_registerAttrList
     69          
     70          #ifdef __cplusplus
     71          }
     72          #endif

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      1     14   zclFindAttrRec
      1     12   zcl_registerAttrList
        0     12   -> osal_mem_alloc


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??zclFindAttrRec?relay
       6  ??zcl_registerAttrList?relay
       5  ?Subroutine0
      15  ?Subroutine1
       8  ?Subroutine2
      13  ?Subroutine3
       6  ?Subroutine4
      16  ?Subroutine5
      10  ?Subroutine6
       2  attrList
     215  zclFindAttrRec
      72  zcl_registerAttrList

 
 360 bytes in segment BANKED_CODE
  12 bytes in segment BANK_RELAYS
   2 bytes in segment XDATA_Z
 
 372 bytes of CODE  memory
   2 bytes of XDATA memory

Errors: none
Warnings: none
